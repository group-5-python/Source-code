# -*- coding: utf-8 -*-
"""mazenogilzene.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bpd31rMJvHdWxHxrFGs0MSB-n0XX5Ldj
"""

# Data manipulation and analysis
import pandas as pd
import numpy as np

# Data visualization
import matplotlib.pyplot as plt
import seaborn as sns

# Machine learning
from sklearn.model_selection import train_test_split, GridSearchCV, RandomizedSearchCV, cross_val_score
from sklearn.preprocessing import StandardScaler, OneHotEncoder, LabelEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error,mean_absolute_error, r2_score
from scipy.stats import uniform
!pip install streamlit
import streamlit as st


# Streamlit GUI
def main():
    st.title('Car Price Prediction')

    st.sidebar.header('User Input Parameters')

    # Input fields
    make = st.sidebar.selectbox('Make', vehicles_df['manufacturer'].unique())
    model = st.sidebar.selectbox('Model', vehicles_df['model'].unique())
    year = st.sidebar.slider('Year', min_value=2000, max_value=2024, value=2020)
    mileage = st.sidebar.slider('Mileage (in miles)', min_value=0, max_value=300000, value=50000)
    condition = st.sidebar.selectbox('Condition', vehicles_df['condition'].unique())

    # Prepare input data
    input_data = pd.DataFrame({
        'manufacturer': [make],
        'model': [model],
        'year': [year],
        'odometer': [mileage],
        'condition': [condition]
    })
    input_data['car_age'] = 2024 - input_data['year']
    input_data['log_odometer'] = np.log1p(input_data['odometer'])
    input_data = input_data[['log_odometer', 'car_age', 'manufacturer', 'model', 'condition']]

    # Predict using the best model
    if st.sidebar.button('Predict'):
        prediction = best_rf.predict(input_data)
        st.write(f"Predicted Price: ${np.expm1(prediction[0]):,.2f}")

if __name__ == "__main__":
    main()

streamlit run mazenogilzene.py